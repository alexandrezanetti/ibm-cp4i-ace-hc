

CREATE COMPUTE MODULE ACE_Workshop_Sample_Health_Check_CP_HealthResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET OutputRoot.HTTPReplyHeader."Content-Type" = 'application/json';
		SET OutputRoot.HTTPReplyHeader."X-Original-HTTP-Status-Code" = 200;


		SET OutputRoot.JSON.Data.Health.Current_Timestamp 	= CURRENT_TIMESTAMP;
		SET OutputRoot.JSON.Data.Health.ApplicationName 	= ApplicationLabel;
		SET OutputRoot.JSON.Data.Health.LibraryName			= LibraryLabel;
		SET OutputRoot.JSON.Data.Health.MessageFlowName 	= MessageFlowLabel;
		SET OutputRoot.JSON.Data.Health.NodeName 			= NodeLabel;
		SET OutputRoot.JSON.Data.Health.QueueManagerName	= QueueManagerName;
		SET OutputRoot.JSON.Data.Health.ACE_IN 				= BrokerName;
		SET OutputRoot.JSON.Data.Health.ACE_IN_Version 		= BrokerVersion;
		SET OutputRoot.JSON.Data.Health.ACE_IS				= ExecutionGroupLabel;
		SET OutputRoot.JSON.Data.Health.ACE_IS_UUID 		= ExecutionGroupName;
		SET OutputRoot.JSON.Data.Health.O_S 				= Family;
		SET OutputRoot.JSON.Data.Health.ProcessID 			= ProcessId;
		SET OutputRoot.JSON.Data.Health.UserID 				= BrokerUserId; 
		SET OutputRoot.JSON.Data.Health.Status				= 'OK'; 
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
